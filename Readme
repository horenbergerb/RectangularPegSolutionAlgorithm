##########
#Overview#
##########
NOTE: This code is for Python 2.7.17 and Python 3.0 is known to cause problems for some files
Dependencies: numpy, scipy, futures, matplotlib, probably other things (please let me know if issues pop up)

This is a collection of programs to implement and visualize methods used for finding rectangles in curves.
It was written in response to a new paper with an astounding and complex proof of an easy-to-understand and hard-to-believe claim, which is essentially this:
If you draw a smooth (no jagged bits) loop, and then pick a rectangle of some height:width proportion, you can find points on that loop which are the corners of a rectangle with the same proportion.
Don't believe me? Try it yourself in the RectangleFinder folder (or read the actual mathematical proof cited in the Readme of the same folder)

So now let's go over the toys available
#################
#RectangleFinder#
#################
In the RectangleFinder folder, you'll find an algorithmic implementation of the new and amazing proof that a rectangle of any proportion can be constructed from points on any smooth Jordan curve. There is a program for drawing your own smooth loop as well! Head on over to that folder for more details

########################
#VaughanRectangleMethod#
########################
So the proof implemented in the RectangleFinder folder is really complex. It's mapping four-dimensional things to other four-dimensional things. I thought one could get a good taste of the concepts by playing with other proofs about the existence of rectangles on loops.

Vaughan used topological methods to show that some rectangle must exist on certain loops. These methods can be described and visualized with a little more ease. The code in this file lets you implement some of his methods on your own hand-drawn curves!